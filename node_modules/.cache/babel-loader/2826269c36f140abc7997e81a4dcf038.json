{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { estimateScrollWidth } from '@material/dom/ponyfill';\nimport { MDCFloatingLabelFoundation } from './foundation';\n\nvar MDCFloatingLabel =\n/** @class */\nfunction (_super) {\n  __extends(MDCFloatingLabel, _super);\n\n  function MDCFloatingLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCFloatingLabel.attachTo = function (root) {\n    return new MDCFloatingLabel(root);\n  };\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param shouldShake If true, shakes the label by adding a CSS class; otherwise, stops shaking by removing the class.\n   */\n\n\n  MDCFloatingLabel.prototype.shake = function (shouldShake) {\n    this.foundation.shake(shouldShake);\n  };\n  /**\n   * Styles the label to float/dock.\n   * @param shouldFloat If true, floats the label by adding a CSS class; otherwise, docks it by removing the class.\n   */\n\n\n  MDCFloatingLabel.prototype.float = function (shouldFloat) {\n    this.foundation.float(shouldFloat);\n  };\n  /**\n   * Styles the label as required.\n   * @param isRequired If true, adds an asterisk to the label, indicating that it is required.\n   */\n\n\n  MDCFloatingLabel.prototype.setRequired = function (isRequired) {\n    this.foundation.setRequired(isRequired);\n  };\n\n  MDCFloatingLabel.prototype.getWidth = function () {\n    return this.foundation.getWidth();\n  };\n\n  MDCFloatingLabel.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      getWidth: function () {\n        return estimateScrollWidth(_this.root);\n      },\n      registerInteractionHandler: function (evtType, handler) {\n        return _this.listen(evtType, handler);\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        return _this.unlisten(evtType, handler);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCFloatingLabelFoundation(adapter);\n  };\n\n  return MDCFloatingLabel;\n}(MDCComponent);\n\nexport { MDCFloatingLabel };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,YAAR,QAA2B,0BAA3B;AACA,SAAQC,mBAAR,QAAkC,wBAAlC;AAEA,SAAQC,0BAAR,QAAyC,cAAzC;;AAIA;AAAA;AAAA;EAAsCC;;EAAtC;;EAiDC;;EAhDiBC,4BAAhB,UAAyBC,IAAzB,EAAsC;IACpC,OAAO,IAAID,gBAAJ,CAAqBC,IAArB,CAAP;EACD,CAFe;EAIhB;;;;;;EAIAD,6CAAME,WAAN,EAA0B;IACxB,KAAKC,UAAL,CAAgBC,KAAhB,CAAsBF,WAAtB;EACD,CAFD;EAIA;;;;;;EAIAF,6CAAMK,WAAN,EAA0B;IACxB,KAAKF,UAAL,CAAgBG,KAAhB,CAAsBD,WAAtB;EACD,CAFD;EAIA;;;;;;EAIAL,mDAAYO,UAAZ,EAA+B;IAC7B,KAAKJ,UAAL,CAAgBK,WAAhB,CAA4BD,UAA5B;EACD,CAFD;;EAIAP;IACE,OAAO,KAAKG,UAAL,CAAgBM,QAAhB,EAAP;EACD,CAFD;;EAIST,kDAAT;IAAA,kBACE;IACA;IACA;;;IACA,IAAMU,OAAO,GAA4B;MACvCC,QAAQ,EAAE,UAACC,SAAD,EAAU;QAAK,YAAI,CAACX,IAAL,CAAUY,SAAV,CAAoBC,GAApB,CAAwBF,SAAxB;MAAkC,CADpB;MAEvCG,WAAW,EAAE,UAACH,SAAD,EAAU;QAAK,YAAI,CAACX,IAAL,CAAUY,SAAV,CAAoBG,MAApB,CAA2BJ,SAA3B;MAAqC,CAF1B;MAGvCH,QAAQ,EAAE;QAAM,0BAAmB,CAACQ,KAAI,CAAChB,IAAN,CAAnB;MAA8B,CAHP;MAIvCiB,0BAA0B,EAAE,UAACC,OAAD,EAAUC,OAAV,EAAiB;QACzC,YAAI,CAACC,MAAL,CAAYF,OAAZ,EAAqBC,OAArB;MAA6B,CALM;MAMvCE,4BAA4B,EAAE,UAACH,OAAD,EAAUC,OAAV,EAAiB;QAC3C,YAAI,CAACG,QAAL,CAAcJ,OAAd,EAAuBC,OAAvB;MAA+B;IAPI,CAAzC,CAJF,CAaE;;IACA,OAAO,IAAItB,0BAAJ,CAA+BY,OAA/B,CAAP;EACD,CAfQ;;EAgBX;AAAC,CAjDD,CAAsCd,YAAtC","names":["MDCComponent","estimateScrollWidth","MDCFloatingLabelFoundation","__extends","MDCFloatingLabel","root","shouldShake","foundation","shake","shouldFloat","float","isRequired","setRequired","getWidth","adapter","addClass","className","classList","add","removeClass","remove","_this","registerInteractionHandler","evtType","handler","listen","deregisterInteractionHandler","unlisten"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}