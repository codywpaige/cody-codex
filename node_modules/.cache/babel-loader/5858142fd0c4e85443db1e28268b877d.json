{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTextFieldHelperTextFoundation } from './foundation';\n\nvar MDCTextFieldHelperText =\n/** @class */\nfunction (_super) {\n  __extends(MDCTextFieldHelperText, _super);\n\n  function MDCTextFieldHelperText() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTextFieldHelperText.attachTo = function (root) {\n    return new MDCTextFieldHelperText(root);\n  };\n\n  Object.defineProperty(MDCTextFieldHelperText.prototype, \"foundationForTextField\", {\n    // Provided for access by MDCTextField component\n    get: function () {\n      return this.foundation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCTextFieldHelperText.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root.classList.contains(className);\n      },\n      getAttr: function (attr) {\n        return _this.root.getAttribute(attr);\n      },\n      setAttr: function (attr, value) {\n        return _this.root.setAttribute(attr, value);\n      },\n      removeAttr: function (attr) {\n        return _this.root.removeAttribute(attr);\n      },\n      setContent: function (content) {\n        _this.root.textContent = content;\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCTextFieldHelperTextFoundation(adapter);\n  };\n\n  return MDCTextFieldHelperText;\n}(MDCComponent);\n\nexport { MDCTextFieldHelperText };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,YAAR,QAA2B,0BAA3B;AAEA,SAAQC,gCAAR,QAA+C,cAA/C;;AAKA;AAAA;AAAA;EAA4CC;;EAA5C;;EA4BC;;EA3BiBC,kCAAhB,UAAyBC,IAAzB,EAAsC;IACpC,OAAO,IAAID,sBAAJ,CAA2BC,IAA3B,CAAP;EACD,CAFe;;EAKhBC,sBAAIF,gCAAJ,EAAI,wBAAJ,EAA0B;IAD1B;SACA;MACE,OAAO,KAAKG,UAAZ;IACD,CAFyB;qBAAA;;EAAA,CAA1B;;EAISH,wDAAT;IAAA,kBACE;IACA;IACA;;;IACA,IAAMI,OAAO,GAAkC;MAC7CC,QAAQ,EAAE,UAACC,SAAD,EAAU;QAAK,YAAI,CAACL,IAAL,CAAUM,SAAV,CAAoBC,GAApB,CAAwBF,SAAxB;MAAkC,CADd;MAE7CG,WAAW,EAAE,UAACH,SAAD,EAAU;QAAK,YAAI,CAACL,IAAL,CAAUM,SAAV,CAAoBG,MAApB,CAA2BJ,SAA3B;MAAqC,CAFpB;MAG7CK,QAAQ,EAAE,UAACL,SAAD,EAAU;QAAK,YAAI,CAACL,IAAL,CAAUM,SAAV,CAAoBK,QAApB,CAA6BN,SAA7B;MAAuC,CAHnB;MAI7CO,OAAO,EAAE,UAACC,IAAD,EAAK;QAAK,YAAI,CAACb,IAAL,CAAUc,YAAV,CAAuBD,IAAvB;MAA4B,CAJF;MAK7CE,OAAO,EAAE,UAACF,IAAD,EAAOG,KAAP,EAAY;QAAK,YAAI,CAAChB,IAAL,CAAUiB,YAAV,CAAuBJ,IAAvB,EAA6BG,KAA7B;MAAmC,CALhB;MAM7CE,UAAU,EAAE,UAACL,IAAD,EAAK;QAAK,YAAI,CAACb,IAAL,CAAUmB,eAAV,CAA0BN,IAA1B;MAA+B,CANR;MAO7CO,UAAU,EAAE,UAACC,OAAD,EAAQ;QAClBC,KAAI,CAACtB,IAAL,CAAUuB,WAAV,GAAwBF,OAAxB;MACD;IAT4C,CAA/C,CAJF,CAeE;;IACA,OAAO,IAAIxB,gCAAJ,CAAqCM,OAArC,CAAP;EACD,CAjBQ;;EAkBX;AAAC,CA5BD,CAA4CP,YAA5C","names":["MDCComponent","MDCTextFieldHelperTextFoundation","__extends","MDCTextFieldHelperText","root","Object","foundation","adapter","addClass","className","classList","add","removeClass","remove","hasClass","contains","getAttr","attr","getAttribute","setAttr","value","setAttribute","removeAttr","removeAttribute","setContent","content","_this","textContent"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}