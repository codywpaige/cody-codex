{"ast":null,"code":"var _jsxFileName = \"/Users/cody/Documents/GitHub/cody-codex/react-bitch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // create a usestate var called test that captures the value of the input wtext\n  const [text, setText] = React.useState([]);\n  const [codex, setCodex] = React.useState([]);\n  const [textTwo, setTextTwo] = React.useState([]);\n  const [isLoading, setIsLoading] = useState(false); // update state value for input\n\n  const onChangeL = event => {\n    setText(event);\n    console.log(event);\n  };\n\n  const onChangeTwo = event => {\n    setTextTwo(event);\n    console.log(event);\n  };\n\n  setIsLoading(true);\n\n  let submitCodexCall = () => {\n    fetch('https://api.openai.com/v1/edits', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer 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'\n      },\n      body: JSON.stringify({\n        'model': 'text-davinci-edit-001',\n        'input': `${text}`,\n        'instruction': `${textTwo}`\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setCodex(data);\n      setIsLoading(false);\n      console.log(codex + \"codex\");\n    });\n    return codex;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paragraph-text\",\n      children: [\"Provided Sample\", /*#__PURE__*/_jsxDEV(TextField, {\n        value: text,\n        name: \"Sample\",\n        onChange: e => onChangeL(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), \"Instructions and \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }, this), \"critiques (response)\", /*#__PURE__*/_jsxDEV(TextField, {\n        value: textTwo,\n        name: \"Instructions\",\n        onChange: e => onChangeTwo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitCodexCall,\n        className: \"submit-one\",\n        children: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paragraph-text\",\n      children: [\"Provided Sample\", /*#__PURE__*/_jsxDEV(TextField, {\n        value: text,\n        name: \"Sample\",\n        onChange: e => onChangeL(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), \"Instructions and \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }, this), \"critiques (response)\", /*#__PURE__*/_jsxDEV(TextField, {\n        value: textTwo,\n        name: \"Instructions\",\n        onChange: e => onChangeTwo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitCodexCall,\n        className: \"submit-one\",\n        children: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: codex.choices[0].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"1bNjYJvk8Zf+CFRW9f2+nX/U9Vk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TextField","Button","React","useState","App","text","setText","codex","setCodex","textTwo","setTextTwo","isLoading","setIsLoading","onChangeL","event","console","log","onChangeTwo","submitCodexCall","fetch","method","headers","body","JSON","stringify","then","response","json","data","e","target","value","choices"],"sources":["/Users/cody/Documents/GitHub/cody-codex/react-bitch/src/App.js"],"sourcesContent":["import './App.css';\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button';\nimport React from 'react';\nimport { useState } from 'react';\n\nfunction App() {\n  // create a usestate var called test that captures the value of the input wtext\n  const [text, setText] = React.useState([]);\n  const [codex, setCodex] = React.useState([]);\n  const [textTwo, setTextTwo] = React.useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // update state value for input\n  const onChangeL = (event) => {\n      setText(event);\n      console.log(event);\n    };\n\n  const onChangeTwo = (event) => {\n    setTextTwo(event);\n    console.log(event);\n  };\n\n  setIsLoading(true);\n\n  let submitCodexCall = () => {\n    fetch('https://api.openai.com/v1/edits', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer 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'\n    },\n    body: JSON.stringify({\n        'model': 'text-davinci-edit-001',\n        'input': `${text}`,\n        'instruction': `${textTwo}`\n    })\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log(data);\n    setCodex(data)\n    setIsLoading(false);\n    console.log(codex + \"codex\")\n  })\n  return codex;\n}\n\n  return (\n  <div>\n    {!isLoading\n      ?     <div className=\"paragraph-text\">\n      Provided Sample\n      <TextField value={text} name=\"Sample\" onChange={e => onChangeL(e.target.value)} />\n      <br></br>\n      <br></br>\n      Instructions and <br></br>\n      critiques (response)<TextField value={textTwo} name=\"Instructions\" onChange={e => onChangeTwo(e.target.value)} />\n      <br></br>\n      <Button onClick={submitCodexCall} className='submit-one'>Primary</Button>\n      </div>\n      :<div className=\"paragraph-text\">\n      Provided Sample\n      <TextField value={text} name=\"Sample\" onChange={e => onChangeL(e.target.value)} />\n      <br></br>\n      <br></br>\n      Instructions and <br></br>\n      critiques (response)<TextField value={textTwo} name=\"Instructions\" onChange={e => onChangeTwo(e.target.value)} />\n      <br></br>\n      <Button onClick={submitCodexCall} className='submit-one'>Primary</Button>\n      <div>\n        {codex.choices[0].text}\n      </div>\n      </div>\n    }\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}