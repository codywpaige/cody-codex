{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCLineRippleFoundation } from './foundation';\n\nvar MDCLineRipple =\n/** @class */\nfunction (_super) {\n  __extends(MDCLineRipple, _super);\n\n  function MDCLineRipple() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCLineRipple.attachTo = function (root) {\n    return new MDCLineRipple(root);\n  };\n  /**\n   * Activates the line ripple\n   */\n\n\n  MDCLineRipple.prototype.activate = function () {\n    this.foundation.activate();\n  };\n  /**\n   * Deactivates the line ripple\n   */\n\n\n  MDCLineRipple.prototype.deactivate = function () {\n    this.foundation.deactivate();\n  };\n  /**\n   * Sets the transform origin given a user's click location.\n   * The `rippleCenter` is the x-coordinate of the middle of the ripple.\n   */\n\n\n  MDCLineRipple.prototype.setRippleCenter = function (xCoordinate) {\n    this.foundation.setRippleCenter(xCoordinate);\n  };\n\n  MDCLineRipple.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root.classList.contains(className);\n      },\n      setStyle: function (propertyName, value) {\n        return _this.root.style.setProperty(propertyName, value);\n      },\n      registerEventHandler: function (evtType, handler) {\n        return _this.listen(evtType, handler);\n      },\n      deregisterEventHandler: function (evtType, handler) {\n        return _this.unlisten(evtType, handler);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCLineRippleFoundation(adapter);\n  };\n\n  return MDCLineRipple;\n}(MDCComponent);\n\nexport { MDCLineRipple };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,YAAR,QAA2B,0BAA3B;AAEA,SAAQC,uBAAR,QAAsC,cAAtC;;AAIA;AAAA;AAAA;EAAmCC;;EAAnC;;EA0CC;;EAzCiBC,yBAAhB,UAAyBC,IAAzB,EAAsC;IACpC,OAAO,IAAID,aAAJ,CAAkBC,IAAlB,CAAP;EACD,CAFe;EAIhB;;;;;EAGAD;IACE,KAAKE,UAAL,CAAgBC,QAAhB;EACD,CAFD;EAIA;;;;;EAGAH;IACE,KAAKE,UAAL,CAAgBE,UAAhB;EACD,CAFD;EAIA;;;;;;EAIAJ,oDAAgBK,WAAhB,EAAmC;IACjC,KAAKH,UAAL,CAAgBI,eAAhB,CAAgCD,WAAhC;EACD,CAFD;;EAISL,+CAAT;IAAA,kBACE;IACA;IACA;;;IACA,IAAMO,OAAO,GAAyB;MACpCC,QAAQ,EAAE,UAACC,SAAD,EAAU;QAAK,YAAI,CAACR,IAAL,CAAUS,SAAV,CAAoBC,GAApB,CAAwBF,SAAxB;MAAkC,CADvB;MAEpCG,WAAW,EAAE,UAACH,SAAD,EAAU;QAAK,YAAI,CAACR,IAAL,CAAUS,SAAV,CAAoBG,MAApB,CAA2BJ,SAA3B;MAAqC,CAF7B;MAGpCK,QAAQ,EAAE,UAACL,SAAD,EAAU;QAAK,YAAI,CAACR,IAAL,CAAUS,SAAV,CAAoBK,QAApB,CAA6BN,SAA7B;MAAuC,CAH5B;MAIpCO,QAAQ,EAAE,UAACC,YAAD,EAAeC,KAAf,EAAoB;QAAK,OAACC,KAAI,CAAClB,IAAL,CAA0BmB,KAA1B,CAAgCC,WAAhC,CAA4CJ,YAA5C,EAA0DC,KAA1D,CAAD;MAAiE,CAJhE;MAKpCI,oBAAoB,EAAE,UAACC,OAAD,EAAUC,OAAV,EAAiB;QAAK,YAAI,CAACC,MAAL,CAAYF,OAAZ,EAAqBC,OAArB;MAA6B,CALrC;MAMpCE,sBAAsB,EAAE,UAACH,OAAD,EAAUC,OAAV,EAAiB;QAAK,YAAI,CAACG,QAAL,CAAcJ,OAAd,EAAuBC,OAAvB;MAA+B;IANzC,CAAtC,CAJF,CAYE;;IACA,OAAO,IAAI1B,uBAAJ,CAA4BS,OAA5B,CAAP;EACD,CAdQ;;EAeX;AAAC,CA1CD,CAAmCV,YAAnC","names":["MDCComponent","MDCLineRippleFoundation","__extends","MDCLineRipple","root","foundation","activate","deactivate","xCoordinate","setRippleCenter","adapter","addClass","className","classList","add","removeClass","remove","hasClass","contains","setStyle","propertyName","value","_this","style","setProperty","registerEventHandler","evtType","handler","listen","deregisterEventHandler","unlisten"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}