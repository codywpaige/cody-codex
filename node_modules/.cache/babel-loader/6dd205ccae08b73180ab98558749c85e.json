{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\n\nvar MDCLineRippleFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCLineRippleFoundation, _super);\n\n  function MDCLineRippleFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCLineRippleFoundation.defaultAdapter), adapter)) || this;\n\n    _this.transitionEndHandler = function (evt) {\n      _this.handleTransitionEnd(evt);\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCLineRippleFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCLineRippleFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.\n     */\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        hasClass: function () {\n          return false;\n        },\n        setStyle: function () {\n          return undefined;\n        },\n        registerEventHandler: function () {\n          return undefined;\n        },\n        deregisterEventHandler: function () {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCLineRippleFoundation.prototype.init = function () {\n    this.adapter.registerEventHandler('transitionend', this.transitionEndHandler);\n  };\n\n  MDCLineRippleFoundation.prototype.destroy = function () {\n    this.adapter.deregisterEventHandler('transitionend', this.transitionEndHandler);\n  };\n\n  MDCLineRippleFoundation.prototype.activate = function () {\n    this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  };\n\n  MDCLineRippleFoundation.prototype.setRippleCenter = function (xCoordinate) {\n    this.adapter.setStyle('transform-origin', xCoordinate + \"px center\");\n  };\n\n  MDCLineRippleFoundation.prototype.deactivate = function () {\n    this.adapter.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  };\n\n  MDCLineRippleFoundation.prototype.handleTransitionEnd = function (evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    var isDeactivating = this.adapter.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  };\n\n  return MDCLineRippleFoundation;\n}(MDCFoundation);\n\nexport { MDCLineRippleFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCLineRippleFoundation;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,aAAR,QAA4B,2BAA5B;AAGA,SAAQC,UAAR,QAAyB,aAAzB;;AAEA;AAAA;AAAA;EAA6CC;;EAuB3C,iCAAYC,OAAZ,EAAmD;IAAnD,YACEC,wCAAUC,uBAAuB,CAACC,cAAlC,GAAqDH,OAArD,MAA8D,IADhE;;IAGEI,KAAI,CAACC,oBAAL,GAA4B,UAACC,GAAD,EAAI;MAC9BF,KAAI,CAACG,mBAAL,CAAyBD,GAAzB;IACD,CAFD;;;EAGD;;EA5BDE,sBAAoBN,uBAApB,EAAoB,YAApB,EAA8B;SAA9B;MACE,OAAOJ,UAAP;IACD,CAF6B;qBAAA;;EAAA,CAA9B;EAOAU,sBAAoBN,uBAApB,EAAoB,gBAApB,EAAkC;IAHlC;;;SAGA;MACE;MACA,OAAO;QACLO,QAAQ,EAAE;UAAM;QAAS,CADpB;QAELC,WAAW,EAAE;UAAM;QAAS,CAFvB;QAGLC,QAAQ,EAAE;UAAM;QAAK,CAHhB;QAILC,QAAQ,EAAE;UAAM;QAAS,CAJpB;QAKLC,oBAAoB,EAAE;UAAM;QAAS,CALhC;QAMLC,sBAAsB,EAAE;UAAM;QAAS;MANlC,CAAP,CAFF,CAUE;IACD,CAXiC;qBAAA;;EAAA,CAAlC;;EAuBSZ,yCAAT;IACE,KAAKF,OAAL,CAAaa,oBAAb,CACI,eADJ,EACqB,KAAKR,oBAD1B;EAED,CAHQ;;EAKAH,4CAAT;IACE,KAAKF,OAAL,CAAac,sBAAb,CACI,eADJ,EACqB,KAAKT,oBAD1B;EAED,CAHQ;;EAKTH;IACE,KAAKF,OAAL,CAAaU,WAAb,CAAyBZ,UAAU,CAACiB,wBAApC;IACA,KAAKf,OAAL,CAAaS,QAAb,CAAsBX,UAAU,CAACkB,kBAAjC;EACD,CAHD;;EAKAd,8DAAgBe,WAAhB,EAAmC;IACjC,KAAKjB,OAAL,CAAaY,QAAb,CAAsB,kBAAtB,EAA6CK,WAAW,cAAxD;EACD,CAFD;;EAIAf;IACE,KAAKF,OAAL,CAAaS,QAAb,CAAsBX,UAAU,CAACiB,wBAAjC;EACD,CAFD;;EAIAb,kEAAoBI,GAApB,EAAwC;IACtC;IACA;IACA,IAAMY,cAAc,GAChB,KAAKlB,OAAL,CAAaW,QAAb,CAAsBb,UAAU,CAACiB,wBAAjC,CADJ;;IAGA,IAAIT,GAAG,CAACa,YAAJ,KAAqB,SAAzB,EAAoC;MAClC,IAAID,cAAJ,EAAoB;QAClB,KAAKlB,OAAL,CAAaU,WAAb,CAAyBZ,UAAU,CAACkB,kBAApC;QACA,KAAKhB,OAAL,CAAaU,WAAb,CAAyBZ,UAAU,CAACiB,wBAApC;MACD;IACF;EACF,CAZD;;EAaF;AAAC,CAnED,CAA6ClB,aAA7C;;oCAqEA;;AACA,eAAeK,uBAAf","names":["MDCFoundation","cssClasses","__extends","adapter","_super","MDCLineRippleFoundation","defaultAdapter","_this","transitionEndHandler","evt","handleTransitionEnd","Object","addClass","removeClass","hasClass","setStyle","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","isDeactivating","propertyName"],"sources":["foundation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}