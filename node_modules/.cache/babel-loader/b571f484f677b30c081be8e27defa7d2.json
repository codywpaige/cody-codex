{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport * as ponyfill from '@material/dom/ponyfill';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { MDCTextFieldCharacterCounter } from './character-counter/component';\nimport { MDCTextFieldCharacterCounterFoundation } from './character-counter/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCTextFieldFoundation } from './foundation';\nimport { MDCTextFieldHelperText } from './helper-text/component';\nimport { MDCTextFieldHelperTextFoundation } from './helper-text/foundation';\nimport { MDCTextFieldIcon } from './icon/component';\n\nvar MDCTextField =\n/** @class */\nfunction (_super) {\n  __extends(MDCTextField, _super);\n\n  function MDCTextField() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTextField.attachTo = function (root) {\n    return new MDCTextField(root);\n  };\n\n  MDCTextField.prototype.initialize = function (rippleFactory, lineRippleFactory, helperTextFactory, characterCounterFactory, iconFactory, labelFactory, outlineFactory) {\n    if (rippleFactory === void 0) {\n      rippleFactory = function (el, foundation) {\n        return new MDCRipple(el, foundation);\n      };\n    }\n\n    if (lineRippleFactory === void 0) {\n      lineRippleFactory = function (el) {\n        return new MDCLineRipple(el);\n      };\n    }\n\n    if (helperTextFactory === void 0) {\n      helperTextFactory = function (el) {\n        return new MDCTextFieldHelperText(el);\n      };\n    }\n\n    if (characterCounterFactory === void 0) {\n      characterCounterFactory = function (el) {\n        return new MDCTextFieldCharacterCounter(el);\n      };\n    }\n\n    if (iconFactory === void 0) {\n      iconFactory = function (el) {\n        return new MDCTextFieldIcon(el);\n      };\n    }\n\n    if (labelFactory === void 0) {\n      labelFactory = function (el) {\n        return new MDCFloatingLabel(el);\n      };\n    }\n\n    if (outlineFactory === void 0) {\n      outlineFactory = function (el) {\n        return new MDCNotchedOutline(el);\n      };\n    }\n\n    this.input = this.root.querySelector(strings.INPUT_SELECTOR);\n    var labelElement = this.root.querySelector(strings.LABEL_SELECTOR);\n    this.label = labelElement ? labelFactory(labelElement) : null;\n    var lineRippleElement = this.root.querySelector(strings.LINE_RIPPLE_SELECTOR);\n    this.lineRipple = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n    var outlineElement = this.root.querySelector(strings.OUTLINE_SELECTOR);\n    this.outline = outlineElement ? outlineFactory(outlineElement) : null; // Helper text\n\n    var helperTextStrings = MDCTextFieldHelperTextFoundation.strings;\n    var nextElementSibling = this.root.nextElementSibling;\n    var hasHelperLine = nextElementSibling && nextElementSibling.classList.contains(cssClasses.HELPER_LINE);\n    var helperTextEl = hasHelperLine && nextElementSibling && nextElementSibling.querySelector(helperTextStrings.ROOT_SELECTOR);\n    this.helperText = helperTextEl ? helperTextFactory(helperTextEl) : null; // Character counter\n\n    var characterCounterStrings = MDCTextFieldCharacterCounterFoundation.strings;\n    var characterCounterEl = this.root.querySelector(characterCounterStrings.ROOT_SELECTOR); // If character counter is not found in root element search in sibling element.\n\n    if (!characterCounterEl && hasHelperLine && nextElementSibling) {\n      characterCounterEl = nextElementSibling.querySelector(characterCounterStrings.ROOT_SELECTOR);\n    }\n\n    this.characterCounter = characterCounterEl ? characterCounterFactory(characterCounterEl) : null; // Leading icon\n\n    var leadingIconEl = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n    this.leadingIcon = leadingIconEl ? iconFactory(leadingIconEl) : null; // Trailing icon\n\n    var trailingIconEl = this.root.querySelector(strings.TRAILING_ICON_SELECTOR);\n    this.trailingIcon = trailingIconEl ? iconFactory(trailingIconEl) : null; // Prefix and Suffix\n\n    this.prefix = this.root.querySelector(strings.PREFIX_SELECTOR);\n    this.suffix = this.root.querySelector(strings.SUFFIX_SELECTOR);\n    this.ripple = this.createRipple(rippleFactory);\n  };\n\n  MDCTextField.prototype.destroy = function () {\n    if (this.ripple) {\n      this.ripple.destroy();\n    }\n\n    if (this.lineRipple) {\n      this.lineRipple.destroy();\n    }\n\n    if (this.helperText) {\n      this.helperText.destroy();\n    }\n\n    if (this.characterCounter) {\n      this.characterCounter.destroy();\n    }\n\n    if (this.leadingIcon) {\n      this.leadingIcon.destroy();\n    }\n\n    if (this.trailingIcon) {\n      this.trailingIcon.destroy();\n    }\n\n    if (this.label) {\n      this.label.destroy();\n    }\n\n    if (this.outline) {\n      this.outline.destroy();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Initializes the Text Field's internal state based on the environment's\n   * state.\n   */\n\n\n  MDCTextField.prototype.initialSyncWithDOM = function () {\n    this.disabled = this.input.disabled;\n  };\n\n  Object.defineProperty(MDCTextField.prototype, \"value\", {\n    get: function () {\n      return this.foundation.getValue();\n    },\n\n    /**\n     * @param value The value to set on the input.\n     */\n    set: function (value) {\n      this.foundation.setValue(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"disabled\", {\n    get: function () {\n      return this.foundation.isDisabled();\n    },\n\n    /**\n     * @param disabled Sets the Text Field disabled or enabled.\n     */\n    set: function (disabled) {\n      this.foundation.setDisabled(disabled);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"valid\", {\n    get: function () {\n      return this.foundation.isValid();\n    },\n\n    /**\n     * @param valid Sets the Text Field valid or invalid.\n     */\n    set: function (valid) {\n      this.foundation.setValid(valid);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"required\", {\n    get: function () {\n      return this.input.required;\n    },\n\n    /**\n     * @param required Sets the Text Field to required.\n     */\n    set: function (required) {\n      this.input.required = required;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"pattern\", {\n    get: function () {\n      return this.input.pattern;\n    },\n\n    /**\n     * @param pattern Sets the input element's validation pattern.\n     */\n    set: function (pattern) {\n      this.input.pattern = pattern;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"minLength\", {\n    get: function () {\n      return this.input.minLength;\n    },\n\n    /**\n     * @param minLength Sets the input element's minLength.\n     */\n    set: function (minLength) {\n      this.input.minLength = minLength;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"maxLength\", {\n    get: function () {\n      return this.input.maxLength;\n    },\n\n    /**\n     * @param maxLength Sets the input element's maxLength.\n     */\n    set: function (maxLength) {\n      // Chrome throws exception if maxLength is set to a value less than zero\n      if (maxLength < 0) {\n        this.input.removeAttribute('maxLength');\n      } else {\n        this.input.maxLength = maxLength;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"min\", {\n    get: function () {\n      return this.input.min;\n    },\n\n    /**\n     * @param min Sets the input element's min.\n     */\n    set: function (min) {\n      this.input.min = min;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"max\", {\n    get: function () {\n      return this.input.max;\n    },\n\n    /**\n     * @param max Sets the input element's max.\n     */\n    set: function (max) {\n      this.input.max = max;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"step\", {\n    get: function () {\n      return this.input.step;\n    },\n\n    /**\n     * @param step Sets the input element's step.\n     */\n    set: function (step) {\n      this.input.step = step;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"helperTextContent\", {\n    /**\n     * Sets the helper text element content.\n     */\n    set: function (content) {\n      this.foundation.setHelperTextContent(content);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"leadingIconAriaLabel\", {\n    /**\n     * Sets the aria label of the leading icon.\n     */\n    set: function (label) {\n      this.foundation.setLeadingIconAriaLabel(label);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"leadingIconContent\", {\n    /**\n     * Sets the text content of the leading icon.\n     */\n    set: function (content) {\n      this.foundation.setLeadingIconContent(content);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"trailingIconAriaLabel\", {\n    /**\n     * Sets the aria label of the trailing icon.\n     */\n    set: function (label) {\n      this.foundation.setTrailingIconAriaLabel(label);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"trailingIconContent\", {\n    /**\n     * Sets the text content of the trailing icon.\n     */\n    set: function (content) {\n      this.foundation.setTrailingIconContent(content);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"useNativeValidation\", {\n    /**\n     * Enables or disables the use of native validation. Use this for custom validation.\n     * @param useNativeValidation Set this to false to ignore native input validation.\n     */\n    set: function (useNativeValidation) {\n      this.foundation.setUseNativeValidation(useNativeValidation);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"prefixText\", {\n    /**\n     * Gets the text content of the prefix, or null if it does not exist.\n     */\n    get: function () {\n      return this.prefix ? this.prefix.textContent : null;\n    },\n\n    /**\n     * Sets the text content of the prefix, if it exists.\n     */\n    set: function (prefixText) {\n      if (this.prefix) {\n        this.prefix.textContent = prefixText;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextField.prototype, \"suffixText\", {\n    /**\n     * Gets the text content of the suffix, or null if it does not exist.\n     */\n    get: function () {\n      return this.suffix ? this.suffix.textContent : null;\n    },\n\n    /**\n     * Sets the text content of the suffix, if it exists.\n     */\n    set: function (suffixText) {\n      if (this.suffix) {\n        this.suffix.textContent = suffixText;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Focuses the input element.\n   */\n\n  MDCTextField.prototype.focus = function () {\n    this.input.focus();\n  };\n  /**\n   * Recomputes the outline SVG path for the outline element.\n   */\n\n\n  MDCTextField.prototype.layout = function () {\n    var openNotch = this.foundation.shouldFloat;\n    this.foundation.notchOutline(openNotch);\n  };\n\n  MDCTextField.prototype.getDefaultFoundation = function () {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n    var adapter = __assign(__assign(__assign(__assign(__assign({}, this.getRootAdapterMethods()), this.getInputAdapterMethods()), this.getLabelAdapterMethods()), this.getLineRippleAdapterMethods()), this.getOutlineAdapterMethods()); // tslint:enable:object-literal-sort-keys\n\n\n    return new MDCTextFieldFoundation(adapter, this.getFoundationMap());\n  };\n\n  MDCTextField.prototype.getRootAdapterMethods = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root.classList.contains(className);\n      },\n      registerTextFieldInteractionHandler: function (evtType, handler) {\n        _this.listen(evtType, handler);\n      },\n      deregisterTextFieldInteractionHandler: function (evtType, handler) {\n        _this.unlisten(evtType, handler);\n      },\n      registerValidationAttributeChangeHandler: function (handler) {\n        var getAttributesList = function (mutationsList) {\n          return mutationsList.map(function (mutation) {\n            return mutation.attributeName;\n          }).filter(function (attributeName) {\n            return attributeName;\n          });\n        };\n\n        var observer = new MutationObserver(function (mutationsList) {\n          return handler(getAttributesList(mutationsList));\n        });\n        var config = {\n          attributes: true\n        };\n        observer.observe(_this.input, config);\n        return observer;\n      },\n      deregisterValidationAttributeChangeHandler: function (observer) {\n        observer.disconnect();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCTextField.prototype.getInputAdapterMethods = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      getNativeInput: function () {\n        return _this.input;\n      },\n      setInputAttr: function (attr, value) {\n        _this.input.setAttribute(attr, value);\n      },\n      removeInputAttr: function (attr) {\n        _this.input.removeAttribute(attr);\n      },\n      isFocused: function () {\n        return document.activeElement === _this.input;\n      },\n      registerInputInteractionHandler: function (evtType, handler) {\n        _this.input.addEventListener(evtType, handler, applyPassive());\n      },\n      deregisterInputInteractionHandler: function (evtType, handler) {\n        _this.input.removeEventListener(evtType, handler, applyPassive());\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCTextField.prototype.getLabelAdapterMethods = function () {\n    var _this = this;\n\n    return {\n      floatLabel: function (shouldFloat) {\n        _this.label && _this.label.float(shouldFloat);\n      },\n      getLabelWidth: function () {\n        return _this.label ? _this.label.getWidth() : 0;\n      },\n      hasLabel: function () {\n        return Boolean(_this.label);\n      },\n      shakeLabel: function (shouldShake) {\n        _this.label && _this.label.shake(shouldShake);\n      },\n      setLabelRequired: function (isRequired) {\n        _this.label && _this.label.setRequired(isRequired);\n      }\n    };\n  };\n\n  MDCTextField.prototype.getLineRippleAdapterMethods = function () {\n    var _this = this;\n\n    return {\n      activateLineRipple: function () {\n        if (_this.lineRipple) {\n          _this.lineRipple.activate();\n        }\n      },\n      deactivateLineRipple: function () {\n        if (_this.lineRipple) {\n          _this.lineRipple.deactivate();\n        }\n      },\n      setLineRippleTransformOrigin: function (normalizedX) {\n        if (_this.lineRipple) {\n          _this.lineRipple.setRippleCenter(normalizedX);\n        }\n      }\n    };\n  };\n\n  MDCTextField.prototype.getOutlineAdapterMethods = function () {\n    var _this = this;\n\n    return {\n      closeOutline: function () {\n        _this.outline && _this.outline.closeNotch();\n      },\n      hasOutline: function () {\n        return Boolean(_this.outline);\n      },\n      notchOutline: function (labelWidth) {\n        _this.outline && _this.outline.notch(labelWidth);\n      }\n    };\n  };\n  /**\n   * @return A map of all subcomponents to subfoundations.\n   */\n\n\n  MDCTextField.prototype.getFoundationMap = function () {\n    return {\n      characterCounter: this.characterCounter ? this.characterCounter.foundationForTextField : undefined,\n      helperText: this.helperText ? this.helperText.foundationForTextField : undefined,\n      leadingIcon: this.leadingIcon ? this.leadingIcon.foundationForTextField : undefined,\n      trailingIcon: this.trailingIcon ? this.trailingIcon.foundationForTextField : undefined\n    };\n  };\n\n  MDCTextField.prototype.createRipple = function (rippleFactory) {\n    var _this = this;\n\n    var isTextArea = this.root.classList.contains(cssClasses.TEXTAREA);\n    var isOutlined = this.root.classList.contains(cssClasses.OUTLINED);\n\n    if (isTextArea || isOutlined) {\n      return null;\n    } // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = __assign(__assign({}, MDCRipple.createAdapter(this)), {\n      isSurfaceActive: function () {\n        return ponyfill.matches(_this.input, ':active');\n      },\n      registerInteractionHandler: function (evtType, handler) {\n        _this.input.addEventListener(evtType, handler, applyPassive());\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        _this.input.removeEventListener(evtType, handler, applyPassive());\n      }\n    }); // tslint:enable:object-literal-sort-keys\n\n\n    return rippleFactory(this.root, new MDCRippleFoundation(adapter));\n  };\n\n  return MDCTextField;\n}(MDCComponent);\n\nexport { MDCTextField };","map":{"version":3,"mappings":"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","names":["MDCComponent","applyPassive","ponyfill","MDCFloatingLabel","MDCLineRipple","MDCNotchedOutline","MDCRipple","MDCRippleFoundation","MDCTextFieldCharacterCounter","MDCTextFieldCharacterCounterFoundation","cssClasses","strings","MDCTextFieldFoundation","MDCTextFieldHelperText","MDCTextFieldHelperTextFoundation","MDCTextFieldIcon","__extends","MDCTextField","root","rippleFactory","lineRippleFactory","helperTextFactory","characterCounterFactory","iconFactory","labelFactory","outlineFactory","el","foundation","input","querySelector","INPUT_SELECTOR","labelElement","LABEL_SELECTOR","label","lineRippleElement","LINE_RIPPLE_SELECTOR","lineRipple","outlineElement","OUTLINE_SELECTOR","outline","helperTextStrings","nextElementSibling","hasHelperLine","classList","contains","HELPER_LINE","helperTextEl","ROOT_SELECTOR","helperText","characterCounterStrings","characterCounterEl","characterCounter","leadingIconEl","LEADING_ICON_SELECTOR","leadingIcon","trailingIconEl","TRAILING_ICON_SELECTOR","trailingIcon","prefix","PREFIX_SELECTOR","suffix","SUFFIX_SELECTOR","ripple","createRipple","destroy","_super","call","disabled","Object","getValue","value","setValue","isDisabled","setDisabled","isValid","valid","setValid","required","pattern","minLength","maxLength","removeAttribute","min","max","step","content","setHelperTextContent","setLeadingIconAriaLabel","setLeadingIconContent","setTrailingIconAriaLabel","setTrailingIconContent","useNativeValidation","setUseNativeValidation","textContent","prefixText","suffixText","focus","openNotch","shouldFloat","notchOutline","adapter","getRootAdapterMethods","getInputAdapterMethods","getLabelAdapterMethods","getLineRippleAdapterMethods","getOutlineAdapterMethods","getFoundationMap","addClass","className","add","removeClass","remove","hasClass","registerTextFieldInteractionHandler","evtType","handler","_this","listen","deregisterTextFieldInteractionHandler","unlisten","registerValidationAttributeChangeHandler","getAttributesList","mutationsList","map","mutation","attributeName","filter","observer","MutationObserver","config","attributes","observe","deregisterValidationAttributeChangeHandler","disconnect","getNativeInput","setInputAttr","attr","setAttribute","removeInputAttr","isFocused","activeElement","registerInputInteractionHandler","addEventListener","deregisterInputInteractionHandler","removeEventListener","floatLabel","float","getLabelWidth","getWidth","hasLabel","shakeLabel","shouldShake","shake","setLabelRequired","isRequired","setRequired","activateLineRipple","activate","deactivateLineRipple","deactivate","setLineRippleTransformOrigin","normalizedX","setRippleCenter","closeOutline","closeNotch","hasOutline","labelWidth","notch","foundationForTextField","undefined","isTextArea","TEXTAREA","isOutlined","OUTLINED","createAdapter","isSurfaceActive","matches","registerInteractionHandler","deregisterInteractionHandler"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}