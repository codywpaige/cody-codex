{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __read, __spreadArray } from \"tslib\";\nimport { MDCFoundation } from './foundation';\n\nvar MDCComponent =\n/** @class */\nfunction () {\n  function MDCComponent(root, foundation) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    this.root = root;\n    this.initialize.apply(this, __spreadArray([], __read(args))); // Note that we initialize foundation here and not within the constructor's\n    // default param so that this.root is defined and can be used within the\n    // foundation class.\n\n    this.foundation = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation.init();\n    this.initialSyncWithDOM();\n  }\n\n  MDCComponent.attachTo = function (root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation({}));\n  };\n  /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n\n\n  MDCComponent.prototype.initialize = function () {\n    var _args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      _args[_i] = arguments[_i];\n    } // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n\n  };\n\n  MDCComponent.prototype.getDefaultFoundation = function () {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n  };\n\n  MDCComponent.prototype.initialSyncWithDOM = function () {// Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  };\n\n  MDCComponent.prototype.destroy = function () {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation.destroy();\n  };\n\n  MDCComponent.prototype.listen = function (evtType, handler, options) {\n    this.root.addEventListener(evtType, handler, options);\n  };\n\n  MDCComponent.prototype.unlisten = function (evtType, handler, options) {\n    this.root.removeEventListener(evtType, handler, options);\n  };\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n\n\n  MDCComponent.prototype.emit = function (evtType, evtData, shouldBubble) {\n    if (shouldBubble === void 0) {\n      shouldBubble = false;\n    }\n\n    var evt;\n\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root.dispatchEvent(evt);\n  };\n\n  return MDCComponent;\n}();\n\nexport { MDCComponent }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCComponent;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,aAAR,QAA4B,cAA5B;;AAGA;AAAA;AAAA;EAWE,sBACWC,IADX,EAC0BC,UAD1B,EACqD;IAAE;;SAAA,yCAAkB;MAAlBC;;;IAA5C;IACT,KAAKC,UAAL,CAAeC,KAAf,OAAIC,yBAAeH,IAAf,EAAJ,EADmD,CAEnD;IACA;IACA;;IACA,KAAKD,UAAL,GACIA,UAAU,KAAKK,SAAf,GAA2B,KAAKC,oBAAL,EAA3B,GAAyDN,UAD7D;IAEA,KAAKA,UAAL,CAAgBO,IAAhB;IACA,KAAKC,kBAAL;EACD;;EApBMC,wBAAP,UAAgBV,IAAhB,EAA6B;IAC3B;IACA;IACA;IACA;IACA,OAAO,IAAIU,YAAJ,CAAiBV,IAAjB,EAAuB,IAAID,aAAJ,CAAkB,EAAlB,CAAvB,CAAP;EACD,CANM;EAsBP;;;EACAW;IAAW;;SAAA,yCAAwB;MAAxBC;KAAX,CACE;IACA;IACA;;EACD,CAJD;;EAMAD;IACE;IACA;IACA,MAAM,IAAIE,KAAJ,CAAU,mFACZ,kBADE,CAAN;EAED,CALD;;EAOAF,yDACE;IACA;IACA;IACA;EACD,CALD;;EAOAA;IACE;IACA;IACA,KAAKT,UAAL,CAAgBY,OAAhB;EACD,CAJD;;EAcAH,0CAAOI,OAAP,EAAwBC,OAAxB,EAAgDC,OAAhD,EAA2F;IACzF,KAAKhB,IAAL,CAAUiB,gBAAV,CAA2BH,OAA3B,EAAoCC,OAApC,EAA6CC,OAA7C;EACD,CAFD;;EAYAN,4CAASI,OAAT,EAA0BC,OAA1B,EAAkDC,OAAlD,EAA6F;IAC3F,KAAKhB,IAAL,CAAUkB,mBAAV,CAA8BJ,OAA9B,EAAuCC,OAAvC,EAAgDC,OAAhD;EACD,CAFD;EAIA;;;;;EAGAN,wCAAuBI,OAAvB,EAAwCK,OAAxC,EAAoDC,YAApD,EAAwE;IAApB;MAAAA;IAAoB;;IACtE,IAAIC,GAAJ;;IACA,IAAI,OAAOC,WAAP,KAAuB,UAA3B,EAAuC;MACrCD,GAAG,GAAG,IAAIC,WAAJ,CAAmBR,OAAnB,EAA4B;QAChCS,OAAO,EAAEH,YADuB;QAEhCI,MAAM,EAAEL;MAFwB,CAA5B,CAAN;IAID,CALD,MAKO;MACLE,GAAG,GAAGI,QAAQ,CAACC,WAAT,CAAqB,aAArB,CAAN;MACAL,GAAG,CAACM,eAAJ,CAAoBb,OAApB,EAA6BM,YAA7B,EAA2C,KAA3C,EAAkDD,OAAlD;IACD;;IAED,KAAKnB,IAAL,CAAU4B,aAAV,CAAwBP,GAAxB;EACD,CAbD;;EAcF;AAAC,CA3FD;;yBA6FA;;AACA,eAAeX,YAAf","names":["MDCFoundation","root","foundation","args","initialize","apply","__spreadArray","undefined","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","_args","Error","destroy","evtType","handler","options","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","bubbles","detail","document","createEvent","initCustomEvent","dispatchEvent"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}