{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTextFieldCharacterCounterFoundation } from './foundation';\n\nvar MDCTextFieldCharacterCounter =\n/** @class */\nfunction (_super) {\n  __extends(MDCTextFieldCharacterCounter, _super);\n\n  function MDCTextFieldCharacterCounter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTextFieldCharacterCounter.attachTo = function (root) {\n    return new MDCTextFieldCharacterCounter(root);\n  };\n\n  Object.defineProperty(MDCTextFieldCharacterCounter.prototype, \"foundationForTextField\", {\n    // Provided for access by MDCTextField component\n    get: function () {\n      return this.foundation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCTextFieldCharacterCounter.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n\n\n    var adapter = {\n      setContent: function (content) {\n        _this.root.textContent = content;\n      }\n    };\n    return new MDCTextFieldCharacterCounterFoundation(adapter);\n  };\n\n  return MDCTextFieldCharacterCounter;\n}(MDCComponent);\n\nexport { MDCTextFieldCharacterCounter };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,YAAR,QAA2B,0BAA3B;AAEA,SAAQC,sCAAR,QAAqD,cAArD;;AAKA;AAAA;AAAA;EAAkDC;;EAAlD;;EAoBC;;EAnBiBC,wCAAhB,UAAyBC,IAAzB,EAAsC;IACpC,OAAO,IAAID,4BAAJ,CAAiCC,IAAjC,CAAP;EACD,CAFe;;EAKhBC,sBAAIF,sCAAJ,EAAI,wBAAJ,EAA0B;IAD1B;SACA;MACE,OAAO,KAAKG,UAAZ;IACD,CAFyB;qBAAA;;EAAA,CAA1B;;EAISH,8DAAT;IAAA,kBACE;IACA;;;IACA,IAAMI,OAAO,GAAwC;MACnDC,UAAU,EAAE,UAACC,OAAD,EAAQ;QAClBC,KAAI,CAACN,IAAL,CAAUO,WAAV,GAAwBF,OAAxB;MACD;IAHkD,CAArD;IAKA,OAAO,IAAIR,sCAAJ,CAA2CM,OAA3C,CAAP;EACD,CATQ;;EAUX;AAAC,CApBD,CAAkDP,YAAlD","names":["MDCComponent","MDCTextFieldCharacterCounterFoundation","__extends","MDCTextFieldCharacterCounter","root","Object","foundation","adapter","setContent","content","_this","textContent"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}